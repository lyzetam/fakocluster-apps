<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>FluxCD on My New Hugo Site</title>
    <link>http://localhost:1313/tags/fluxcd/</link>
    <description>Recent content in FluxCD on My New Hugo Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 06 Jan 2025 00:00:00 +0000</lastBuildDate><atom:link href="http://localhost:1313/tags/fluxcd/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>GitOps in Practice: Managing Kubernetes with FluxCD</title>
      <link>http://localhost:1313/posts/gitops-with-fluxcd/</link>
      <pubDate>Mon, 06 Jan 2025 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/posts/gitops-with-fluxcd/</guid>
      
      <description>&lt;p&gt;After running the Fako Cluster for several months, I can confidently say that adopting GitOps with FluxCD has been one of the best decisions for managing my Kubernetes infrastructure. In this post, I&amp;rsquo;ll share practical insights and patterns that have proven invaluable.&lt;/p&gt;
&lt;h2 id=&#34;what-is-gitops&#34;&gt;What is GitOps?&lt;/h2&gt;
&lt;p&gt;GitOps is a way of implementing Continuous Deployment for cloud native applications. It focuses on:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Declarative Infrastructure&lt;/strong&gt;: Everything defined in Git&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Automated Reconciliation&lt;/strong&gt;: Cluster state matches Git state&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Version Control&lt;/strong&gt;: Complete history of all changes&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Pull-based Deployment&lt;/strong&gt;: No direct kubectl access needed&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;why-fluxcd&#34;&gt;Why FluxCD?&lt;/h2&gt;
&lt;p&gt;Among GitOps tools like ArgoCD and Fleet, I chose FluxCD because:&lt;/p&gt;</description>
      
    </item>
    
  </channel>
</rss>
